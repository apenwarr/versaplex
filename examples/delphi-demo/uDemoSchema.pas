(*
 * THIS FILE IS AUTOMATICALLY GENERATED BY sm.exe
 * DO NOT EDIT!
 *)
unit uDemoSchema;

interface

uses Classes, uPwData;

{$M+}
type
  _TDemoAdd = class(TPwDataCmd)
  private
    m_LastName: string;
    m_FirstName: string;
    m_Puppies: integer;
  public
    function MakeRawSql: string; override;
    function setLastName(v: string): _TDemoAdd; inline;
    function setFirstName(v: string): _TDemoAdd; inline;
    function setPuppies(v: integer): _TDemoAdd; inline;
  end;

  _TDemoList = class(TPwDataCmd)
  private
    
  public
    function MakeRawSql: string; override;
    
  end;

  _TTestProc = class(TPwDataCmd)
  private
    
  public
    function MakeRawSql: string; override;
    
  end;
  
  TDemoSchema = class(TComponent)
  private
    fDb: TPwDatabase;
    
  published
    property db: TPwDatabase  read fDb write fDb;
    
  public
    constructor Create(db: TPwDatabase); reintroduce;
    function DemoAdd
       (p_LastName: string = '__!NIL!__';
        p_FirstName: string = '__!NIL!__';
        p_Puppies: integer = low(integer)+42): _TDemoAdd;
    function DemoList
       (): _TDemoList;
    function TestProc
       (): _TTestProc;
  end;

implementation

constructor TDemoSchema.Create(db: TPwDatabase);
begin
    inherited Create(db);
    self.db := db;
end;

function TDemoSchema.DemoAdd
       (p_LastName: string;
        p_FirstName: string;
        p_Puppies: integer): _TDemoAdd;
begin
    result := _TDemoAdd.Create(db)
        .setLastName(p_LastName)
        .setFirstName(p_FirstName)
        .setPuppies(p_Puppies);
end;

function TDemoSchema.DemoList
       (): _TDemoList;
begin
    result := _TDemoList.Create(db)
        ;
end;

function TDemoSchema.TestProc
       (): _TTestProc;
begin
    result := _TTestProc.Create(db)
        ;
end;

function _TDemoAdd.MakeRawSql: string;
begin
    result := TPwDatabase.ExecStr('DemoAdd',
       ['LastName',
        'FirstName',
        'Puppies'],
       [m_LastName,
        m_FirstName,
        m_Puppies]);
end;

function _TDemoAdd.setLastName(v: string): _TDemoAdd;
begin
  m_LastName := v;
  result := self;
end;

function _TDemoAdd.setFirstName(v: string): _TDemoAdd;
begin
  m_FirstName := v;
  result := self;
end;

function _TDemoAdd.setPuppies(v: integer): _TDemoAdd;
begin
  m_Puppies := v;
  result := self;
end;

function _TDemoList.MakeRawSql: string;
begin
    result := TPwDatabase.ExecStr('DemoList',
       [],
       []);
end;

function _TTestProc.MakeRawSql: string;
begin
    result := TPwDatabase.ExecStr('TestProc',
       [],
       []);
end;



end.
